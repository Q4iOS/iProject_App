/*
	SDZTickets.m
	The implementation classes and methods for the Tickets web service.
	Generated by SudzC.com
*/

#import "SDZTickets.h"
				
#import "Soap.h"
	
#import "SDZArrayOfTicket.h"
#import "SDZArrayOfScheduleInfo.h"
#import "SDZScheduleInfo.h"
#import "SDZMessageObject.h"
#import "SDZTicketResponse.h"
#import "SDZTicketUOM.h"
#import "SDZTicket.h"

/* Implementation of the service */
				
@implementation SDZTickets

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://ipad.luckstone.com:5885/30/Tickets.svc";
			self.namespace = @"http://tempuri.org/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SDZTickets*) service {
		return [SDZTickets serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SDZTickets*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[SDZTickets alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	// Returns SDZTicket*
	/*  */
	- (SoapRequest*) GetTicket: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid automated: (int) automated
	{
		return [self GetTicket: handler action: nil deviceid: deviceid udid: udid automated: automated];
	}

	- (SoapRequest*) GetTicket: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid automated: (int) automated
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: automated] forName: @"automated"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetTicket" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetTicket" postData: _envelope deserializeTo: [[SDZTicket alloc] autorelease]];
		[_request send];
		return _request;
	}

	// Returns NSMutableArray*
	/*  */
	- (SoapRequest*) GetAllTickets: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetAllTickets: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetAllTickets: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllTickets" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetAllTickets" postData: _envelope deserializeTo: [[SDZArrayOfTicket alloc] autorelease]];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) StoreLatLong: (id <SoapDelegate>) handler locations: (NSString*) locations
	{
		return [self StoreLatLong: handler action: nil locations: locations];
	}

	- (SoapRequest*) StoreLatLong: (id) _target action: (SEL) _action locations: (NSString*) locations
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: locations forName: @"locations"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"StoreLatLong" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/StoreLatLong" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

     /* QFOR - BABU  - JULY 16*/
// Store Signature Soap Webservice Declaration Method

/* Returns NSString*.  */
- (SoapRequest*) StoreSignature: (id <SoapDelegate>) handler signature: (NSString*) signature  signaturenumber:(int) signaturenumber    ticketnumber: (NSString*) ticketnumber locationcode: (NSString*) locationcode deviceid: (NSString*) deviceid udid: (NSString*) udid timestamp: (NSDate*) timestamp latitude: (NSString*) latitude longitude: (NSString*) longitude
{
  return [self StoreSignature: handler action: nil signature: signature  signaturenumber : signaturenumber  ticketnumber: ticketnumber locationcode: locationcode deviceid: deviceid udid: udid timestamp: timestamp latitude: latitude longitude: longitude];
}

- (SoapRequest*) StoreSignature: (id) _target action: (SEL) _action signature: (NSString*) signature signaturenumber:(int) signaturenumber ticketnumber: (NSString*) ticketnumber locationcode: (NSString*) locationcode deviceid: (NSString*) deviceid udid: (NSString*) udid timestamp: (NSDate*) timestamp latitude: (NSString*) latitude longitude: (NSString*) longitude
{
  NSMutableArray* _params = [NSMutableArray array];
  
  [_params addObject: [[[SoapParameter alloc] initWithValue: signature forName: @"signature"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: signaturenumber]  forName: @"signaturenumber"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: ticketnumber forName: @"ticketnumber"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: locationcode forName: @"locationcode"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: timestamp forName: @"timestamp"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: latitude forName: @"latitude"] autorelease]];
  [_params addObject: [[[SoapParameter alloc] initWithValue: longitude forName: @"longitude"] autorelease]];
  NSString* _envelope = [Soap createEnvelope: @"StoreSignature" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
  SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/StoreSignature" postData: _envelope deserializeTo: @"NSString"];
  [_request send];
  return _request;
}

	// Returns NSMutableArray*
	/*  */
	- (SoapRequest*) GetSchedule: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetSchedule: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetSchedule: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetSchedule" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetSchedule" postData: _envelope deserializeTo: [[SDZArrayOfScheduleInfo alloc] autorelease]];
		[_request send];
		return _request;
	}

	// Returns SDZMessageObject*
	/*  */
	- (SoapRequest*) GetMessage: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetMessage: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetMessage: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetMessage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetMessage" postData: _envelope deserializeTo: [[SDZMessageObject alloc] autorelease]];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) AcknowledgeMessage: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid acknowledged: (int) acknowledged acknnowledgeddatetime: (NSDate*) acknnowledgeddatetime messageid: (int) messageid
	{
		return [self AcknowledgeMessage: handler action: nil deviceid: deviceid udid: udid acknowledged: acknowledged acknnowledgeddatetime: acknnowledgeddatetime messageid: messageid];
	}

	- (SoapRequest*) AcknowledgeMessage: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid acknowledged: (int) acknowledged acknnowledgeddatetime: (NSDate*) acknnowledgeddatetime messageid: (int) messageid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: acknowledged] forName: @"acknowledged"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: acknnowledgeddatetime forName: @"acknnowledgeddatetime"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: messageid] forName: @"messageid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"AcknowledgeMessage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/AcknowledgeMessage" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) LoadedDelivered: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid delivereddatetime: (NSDate*) delivereddatetime latitude: (NSString*) latitude longitude: (NSString*) longitude ticketnumber: (NSString*) ticketnumber locationcode: (NSString*) locationcode status: (int) status
	{
		return [self LoadedDelivered: handler action: nil deviceid: deviceid udid: udid delivereddatetime: delivereddatetime latitude: latitude longitude: longitude ticketnumber: ticketnumber locationcode: locationcode status: status];
	}

	- (SoapRequest*) LoadedDelivered: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid delivereddatetime: (NSDate*) delivereddatetime latitude: (NSString*) latitude longitude: (NSString*) longitude ticketnumber: (NSString*) ticketnumber locationcode: (NSString*) locationcode status: (int) status
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivereddatetime forName: @"delivereddatetime"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: latitude forName: @"latitude"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: longitude forName: @"longitude"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: ticketnumber forName: @"ticketnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: locationcode forName: @"locationcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: status] forName: @"status"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"LoadedDelivered" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/LoadedDelivered" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) Available: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid timestamp: (NSDate*) timestamp available: (int) available
	{
		return [self Available: handler action: nil deviceid: deviceid udid: udid timestamp: timestamp available: available];
	}

	- (SoapRequest*) Available: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid timestamp: (NSDate*) timestamp available: (int) available
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: timestamp forName: @"timestamp"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: available] forName: @"available"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"Available" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/Available" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) AcceptMessage: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid accepted: (int) accepted acceptedddatetime: (NSDate*) acceptedddatetime messageid: (int) messageid
	{
		return [self AcceptMessage: handler action: nil deviceid: deviceid udid: udid accepted: accepted acceptedddatetime: acceptedddatetime messageid: messageid];
	}

	- (SoapRequest*) AcceptMessage: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid accepted: (int) accepted acceptedddatetime: (NSDate*) acceptedddatetime messageid: (int) messageid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: accepted] forName: @"accepted"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: acceptedddatetime forName: @"acceptedddatetime"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: messageid] forName: @"messageid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"AcceptMessage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/AcceptMessage" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) TareTicket_Initial: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid tare_or_ticket: (int) tare_or_ticket latitude: (NSString*) latitude longitude: (NSString*) longitude
	{
		return [self TareTicket_Initial: handler action: nil deviceid: deviceid udid: udid tare_or_ticket: tare_or_ticket latitude: latitude longitude: longitude];
	}

	- (SoapRequest*) TareTicket_Initial: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid tare_or_ticket: (int) tare_or_ticket latitude: (NSString*) latitude longitude: (NSString*) longitude
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: tare_or_ticket] forName: @"tare_or_ticket"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: latitude forName: @"latitude"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: longitude forName: @"longitude"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"TareTicket_Initial" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/TareTicket_Initial" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) SelfTare: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid laneid_preferred: (int) laneid_preferred laneid_selected: (int) laneid_selected latitude: (NSString*) latitude longitude: (NSString*) longitude
	{
		return [self SelfTare: handler action: nil deviceid: deviceid udid: udid laneid_preferred: laneid_preferred laneid_selected: laneid_selected latitude: latitude longitude: longitude];
	}

	- (SoapRequest*) SelfTare: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid laneid_preferred: (int) laneid_preferred laneid_selected: (int) laneid_selected latitude: (NSString*) latitude longitude: (NSString*) longitude
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: laneid_preferred] forName: @"laneid_preferred"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: laneid_selected] forName: @"laneid_selected"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: latitude forName: @"latitude"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: longitude forName: @"longitude"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"SelfTare" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/SelfTare" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns SDZTicketResponse*
	/*  */
	- (SoapRequest*) SelfTicket: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid laneid_preferred: (int) laneid_preferred laneid_selected: (int) laneid_selected latitude: (NSString*) latitude longitude: (NSString*) longitude
	{
		return [self SelfTicket: handler action: nil deviceid: deviceid udid: udid laneid_preferred: laneid_preferred laneid_selected: laneid_selected latitude: latitude longitude: longitude];
	}

	- (SoapRequest*) SelfTicket: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid laneid_preferred: (int) laneid_preferred laneid_selected: (int) laneid_selected latitude: (NSString*) latitude longitude: (NSString*) longitude
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: laneid_preferred] forName: @"laneid_preferred"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: laneid_selected] forName: @"laneid_selected"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: latitude forName: @"latitude"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: longitude forName: @"longitude"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"SelfTicket" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/SelfTicket" postData: _envelope deserializeTo: [[SDZTicketResponse alloc] autorelease]];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) EmailTicket: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid locationcode: (NSString*) locationcode ticketnumber: (NSString*) ticketnumber emailaddress: (NSString*) emailaddress
	{
		return [self EmailTicket: handler action: nil deviceid: deviceid udid: udid locationcode: locationcode ticketnumber: ticketnumber emailaddress: emailaddress];
	}

	- (SoapRequest*) EmailTicket: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid locationcode: (NSString*) locationcode ticketnumber: (NSString*) ticketnumber emailaddress: (NSString*) emailaddress
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: locationcode forName: @"locationcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: ticketnumber forName: @"ticketnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailaddress forName: @"emailaddress"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"EmailTicket" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/EmailTicket" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) GetReplys: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetReplys: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetReplys: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetReplys" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetReplys" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) GetStatuses: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetStatuses: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetStatuses: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetStatuses" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetStatuses" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) GetSpeedLimit: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid
	{
		return [self GetSpeedLimit: handler action: nil deviceid: deviceid udid: udid];
	}

	- (SoapRequest*) GetSpeedLimit: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"GetSpeedLimit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetSpeedLimit" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) SendReply: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid replydatetime: (NSDate*) replydatetime messageid: (int) messageid message: (NSString*) message
	{
		return [self SendReply: handler action: nil deviceid: deviceid udid: udid replydatetime: replydatetime messageid: messageid message: message];
	}

	- (SoapRequest*) SendReply: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid replydatetime: (NSDate*) replydatetime messageid: (int) messageid message: (NSString*) message
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: replydatetime forName: @"replydatetime"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: messageid] forName: @"messageid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: message forName: @"message"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"SendReply" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/SendReply" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/*  */
	- (SoapRequest*) SendStatus: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid statusdatetime: (NSDate*) statusdatetime status: (NSString*) status startstop: (int) startstop
	{
		return [self SendStatus: handler action: nil deviceid: deviceid udid: udid statusdatetime: statusdatetime status: status startstop: startstop];
	}

	- (SoapRequest*) SendStatus: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid statusdatetime: (NSDate*) statusdatetime status: (NSString*) status startstop: (int) startstop
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: udid forName: @"udid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: statusdatetime forName: @"statusdatetime"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: status forName: @"status"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: startstop] forName: @"startstop"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"SendStatus" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/SendStatus" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}
                       /*QFOR - BABU - JULY 15*/

/*Get Ticket Notes*/
- (SoapRequest*) GetTicketNotes: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid{
  return [self GetTicketNotes: handler action: nil deviceid: deviceid udid: udid ];
}

- (SoapRequest*) GetTicketNotes: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid
{
  NSMutableArray* _params = [NSMutableArray array];
  
  [_params addObject: [[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: udid forName: @"udid"]];
  
  NSString* _envelope = [Soap createEnvelope: @"GetTicketNotes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
  SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/GetTicketNotes" postData: _envelope deserializeTo: @"NSString"];
  [_request send];
  return _request;
}


//submit notes

- (SoapRequest*) SubmitTicketNotes: (id <SoapDelegate>) handler deviceid: (NSString*) deviceid udid: (NSString*) udid note: (NSString*) note ticketnumber: (int) ticketnumber locationcode: (NSString*) locationcode timestamp: (NSDate*) timestamp latitude: (NSString*) latitude longitude: (NSString*) longitude
{
  return [self SubmitTicketNotes: handler action: nil deviceid: deviceid udid: udid  note: note ticketnumber: ticketnumber  locationcode:locationcode timestamp: timestamp latitude: latitude longitude: longitude];
}

- (SoapRequest*) SubmitTicketNotes: (id) _target action: (SEL) _action deviceid: (NSString*) deviceid udid: (NSString*) udid  note: (NSString*) note ticketnumber: (int) ticketnumber locationcode: (NSString*) locationcode timestamp: (NSDate*) timestamp latitude: (NSString*) latitude longitude: (NSString*) longitude
{
  NSMutableArray* _params = [NSMutableArray array];
  
  [_params addObject: [[SoapParameter alloc] initWithValue: deviceid forName: @"deviceid"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: udid forName: @"udid"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: note forName: @"note"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: ticketnumber] forName: @"ticketnumber"]];
  	[_params addObject: [[[SoapParameter alloc] initWithValue: locationcode forName: @"locationcode"] autorelease]];
  [_params addObject: [[SoapParameter alloc] initWithValue: timestamp forName: @"timestamp"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: latitude forName: @"latitude"]];
  [_params addObject: [[SoapParameter alloc] initWithValue: longitude forName: @"longitude"]];
  NSString* _envelope = [Soap createEnvelope: @"SubmitTicketNotes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
  SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/ITickets/SubmitTicketNotes" postData: _envelope deserializeTo: @"NSString"];
  [_request send];
  return _request;
}
                 /*    QFOR       ENDING  */

@end
	